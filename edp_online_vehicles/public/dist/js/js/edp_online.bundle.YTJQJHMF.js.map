{
  "version": 3,
  "sources": ["../../../../../apps/edp_online_vehicles/edp_online_vehicles/public/js/layout.js"],
  "sourcesContent": ["frappe.ready(function() {\n    frappe.ui.form.Layout.prototype.render  = function(new_fields) {\n        let fields = new_fields || this.fields;\n\n        this.section = null;\n        this.column = null;\n\n        if (this.no_opening_section() && !this.is_tabbed_layout()) {\n            this.fields.unshift({ fieldtype: \"Section Break\" });\n        }\n\n        if (this.is_tabbed_layout()) {\n            // add a tab without `fieldname` to avoid conflicts\n            let default_tab = {\n                label: __(\"Details\"),\n                fieldtype: \"Tab Break\",\n                fieldname: \"__details\",\n            };\n\n            let first_field_visible = this.fields.find((element) => element.hidden == false);\n            let first_tab =\n                first_field_visible?.fieldtype === \"Tab Break\" ? first_field_visible : null;\n\n            if (!first_tab) {\n                this.fields.splice(0, 0, default_tab);\n            } else {\n                // reshuffle __newname field to accomodate under 1st Tab Break\n                let newname_field = this.fields.find((df) => df.fieldname === \"__newname\");\n                if (newname_field && newname_field.get_status(this) === \"Write\") {\n                    this.fields.splice(0, 1);\n                    this.fields.splice(1, 0, newname_field);\n                }\n            }\n        }\n\n        $(\".web-form-header\").append(`\n            <div class=\"form-tabs-list\">\n                <ul class=\"nav form-tabs\" id=\"form-tabs\" role=\"tablist\">\n                    <li class=\"nav-item show\">\n                        <a class=\"nav-link active select-tab\" id=\"details-tab\" data-toggle=\"tab\" data-fieldname=\"details\" href=\"#\" role=\"tab\" aria-controls=\"Details\" aria-selected=\"true\">\n                            Details\n                        </a>\n                    </li>\n                </ul>\n            </div>`)\n\n        fields.forEach((df) => {\n            switch (df.fieldtype) {\n                case \"Fold\":\n                    this.make_page(df);\n                    break;\n                case \"Page Break\":\n                    this.make_page_break(df);\n                    this.make_section(df);\n                    break;\n                case \"Section Break\":\n                    this.make_section(df);\n                    break;\n                case \"Column Break\":\n                    this.make_column(df);\n                    break;\n                case \"Tab Break\":\n                    this.make_tab(df);\n                    break;\n                default:\n                    this.make_field(df);\n            }\n        });\n    }\n\n    frappe.ui.form.Layout.prototype.make_page_break = function(df) {\n        this.page = $('<div class=\"form-page page-break\"></div>').appendTo(this.wrapper);\n        $(\"#form-tabs\").append(`\n            <li class=\"nav-item show\">\n                <a class=\"nav-link select-tab\" id=\"${df.fieldname}-tab\" data-toggle=\"tab\" data-fieldname=\"${df.fieldname}\" href=\"#${df.fieldname}\" role=\"tab\" aria-controls=\"${df.label}\" aria-selected=\"true\">\n                    ${df.label}\n                </a>\n            </li>`)\n\n        $('.select-tab').click(function() {\n            let fieldname = $(this).data('fieldname');\n            $(`div.page-break`).hide();\n            $('.form-layout .form-page:first').hide();\n            $(`div[data-fieldname=\"${fieldname}\"]`).parent().show();\n        });\n\n        $('[data-fieldname=\"details\"]').click(function() {\n            $(`div.page-break`).hide();\n            $('.form-layout .form-page:first').show();\n        });\n    }\n});"],
  "mappings": ";;AAAA,SAAO,MAAM,WAAW;AACpB,WAAO,GAAG,KAAK,OAAO,UAAU,SAAU,SAAS,YAAY;AAC3D,UAAI,SAAS,cAAc,KAAK;AAEhC,WAAK,UAAU;AACf,WAAK,SAAS;AAEd,UAAI,KAAK,mBAAmB,KAAK,CAAC,KAAK,iBAAiB,GAAG;AACvD,aAAK,OAAO,QAAQ,EAAE,WAAW,gBAAgB,CAAC;AAAA,MACtD;AAEA,UAAI,KAAK,iBAAiB,GAAG;AAEzB,YAAI,cAAc;AAAA,UACd,OAAO,GAAG,SAAS;AAAA,UACnB,WAAW;AAAA,UACX,WAAW;AAAA,QACf;AAEA,YAAI,sBAAsB,KAAK,OAAO,KAAK,CAAC,YAAY,QAAQ,UAAU,KAAK;AAC/E,YAAI,aACA,2DAAqB,eAAc,cAAc,sBAAsB;AAE3E,YAAI,CAAC,WAAW;AACZ,eAAK,OAAO,OAAO,GAAG,GAAG,WAAW;AAAA,QACxC,OAAO;AAEH,cAAI,gBAAgB,KAAK,OAAO,KAAK,CAAC,OAAO,GAAG,cAAc,WAAW;AACzE,cAAI,iBAAiB,cAAc,WAAW,IAAI,MAAM,SAAS;AAC7D,iBAAK,OAAO,OAAO,GAAG,CAAC;AACvB,iBAAK,OAAO,OAAO,GAAG,GAAG,aAAa;AAAA,UAC1C;AAAA,QACJ;AAAA,MACJ;AAEA,QAAE,kBAAkB,EAAE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBASlB;AAEX,aAAO,QAAQ,CAAC,OAAO;AACnB,gBAAQ,GAAG;AAAA,eACF;AACD,iBAAK,UAAU,EAAE;AACjB;AAAA,eACC;AACD,iBAAK,gBAAgB,EAAE;AACvB,iBAAK,aAAa,EAAE;AACpB;AAAA,eACC;AACD,iBAAK,aAAa,EAAE;AACpB;AAAA,eACC;AACD,iBAAK,YAAY,EAAE;AACnB;AAAA,eACC;AACD,iBAAK,SAAS,EAAE;AAChB;AAAA;AAEA,iBAAK,WAAW,EAAE;AAAA;AAAA,MAE9B,CAAC;AAAA,IACL;AAEA,WAAO,GAAG,KAAK,OAAO,UAAU,kBAAkB,SAAS,IAAI;AAC3D,WAAK,OAAO,EAAE,0CAA0C,EAAE,SAAS,KAAK,OAAO;AAC/E,QAAE,YAAY,EAAE,OAAO;AAAA;AAAA,qDAEsB,GAAG,oDAAoD,GAAG,qBAAqB,GAAG,wCAAwC,GAAG;AAAA,sBAC5J,GAAG;AAAA;AAAA,kBAEP;AAEV,QAAE,aAAa,EAAE,MAAM,WAAW;AAC9B,YAAI,YAAY,EAAE,IAAI,EAAE,KAAK,WAAW;AACxC,UAAE,gBAAgB,EAAE,KAAK;AACzB,UAAE,+BAA+B,EAAE,KAAK;AACxC,UAAE,uBAAuB,aAAa,EAAE,OAAO,EAAE,KAAK;AAAA,MAC1D,CAAC;AAED,QAAE,4BAA4B,EAAE,MAAM,WAAW;AAC7C,UAAE,gBAAgB,EAAE,KAAK;AACzB,UAAE,+BAA+B,EAAE,KAAK;AAAA,MAC5C,CAAC;AAAA,IACL;AAAA,EACJ,CAAC;",
  "names": []
}
